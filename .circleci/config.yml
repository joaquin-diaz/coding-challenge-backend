version: 2

build-cache: &build-cache
  key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}

build-yarn-cache: &build-yarn-cache
  key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}

install-requirements: &install-requirements
  command: |
    python3 -m venv venv
    . venv/bin/activate
    pip install -r requirements.txt

run-tests: &run-tests
  command: |
    . venv/bin/activate
    python -m unittest

build: &build
  docker:
    - image: circleci/python:3.6
  steps:
    - checkout
    - restore_cache:
        <<: *build-cache
    - run:
        name: Installing dependencies
        <<: *install-requirements
    - save_cache:
        <<: *build-cache
        paths:
          - "venv"
    - run:
        name: Running tests
        <<: *run-tests

deploy: &deploy
  docker:
    - image: circleci/node:latest
  steps:
    - checkout
    - restore_cache:
        name: Restore Yarn Package Cache
        <<: *build-yarn-cache
    - run:
        name: Install serverless and dependencies
        command: |
          npm install -g serverless
          yarn install
    - save_cache:
        name: Save Yarn Package Cache
        <<: *build-yarn-cache
        paths:
          - node_modules/
    - run:
        name: Deploy
        command: sls deploy

jobs:
  build:
    <<: *build
  deploy:
    <<: *deploy
  
only-master: &only-master
  filters:
    branches:
      only: 
        - master

workflows:
  version: 2
  deploy-master:
    jobs:
      - build:
          <<: *only-master
      - deploy:
          <<: *only-master